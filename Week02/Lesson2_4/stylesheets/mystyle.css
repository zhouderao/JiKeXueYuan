body {
    font: 14px/1.5 georgia, serif, sans-serif;
}

p {
    margin: 0;
    padding: 5px 10px;
    background: #eee;
}


/*怪异盒模型 怪异与标准的对比*/

h1 {
    margin: 10px 0;
    font-size: 16px;
}

#weird .xiehe1,
.xiehe2,
.xiehe3 {
    display: inline-block;
}

.xiehe1 {
    margin: 50px;
    margin-left: 100px;
    padding: 10px;
    width: 100px;
    height: 100px;
    border: 5px solid red;
    background-color: aqua;
}

.xiezi1 {
    width: 100px;
    height: 100px;
    background-color: orange;
}

.xiehe2 {
    margin: 50px;
    margin-left: 100px;
    padding: 10px;
    width: 120px;
    height: 120px;
    border: 5px solid red;
    background-color: aqua;
    box-sizing: border-box;
}

.xiezi2 {
    width: 100px;
    height: 100px;
    background-color: orange;
}

.xiehe3 {
    margin: 50px;
    margin-left: 100px;
    padding: 10px;
    width: 120px;
    height: 120px;
    border: 5px solid red;
    background-color: aqua;
    box-sizing: content-box;
}

.xiezi3 {
    width: 100px;
    height: 100px;
    background-color: orange;
}


/*flex示例 flexbox实现竖向排列 横向排列 order排列*/
.box {
    display: -webkit-flex;
    display: flex;
    width: 600px;
    height: 100px;
    margin: 10px 0 0;
    padding: 0;
    border-radius: 5px;
    list-style: none;
    background-color: #eee;
}

.box li {
    background: #aaa;
    text-align: center;
}


/*CSS3选择器 设置颜色*/

.box li:nth-child(1) {
    background: #999;
}

.box li:nth-child(2) {
    background: #aaa;
}

.box li:nth-child(3) {
    background: #ccc;
}


/*按份数分配*/

#box li:nth-child(1) {
    -webkit-flex: 1;
    flex: 1;
}

#box li:nth-child(2) {
    -webkit-flex: 2;
    flex: 2;
}

#box li:nth-child(3) {
    -webkit-flex: 1;
    flex: 1;
}


/*flexbox实现竖向排列 横向排列 order排列*/

.box1 {
    display: -webkit-flex;
    display: flex;
    width: 600px;
    height: 180px;
    margin: 0;
    padding: 0;
    list-style: none;
}


/*子元素横向排列*/

#box2 {
    -webkit-flex-direction: row;
}

#box3 {
    -webkit-flex-direction: column;
}

/*子元素纵向排列*/
.box1 li:nth-child(1) {
    -webkit-flex: 1;
    background: #600;
}

.box1 li:nth-child(2) {
    -webkit-flex: 2;
    background: #060;
}

.box1 li:nth-child(3) {
    -webkit-flex: 3;
    background: #066;
}

/*order排列*/
.box2 {
    display: -webkit-flex;
    display: flex;
    margin: 0;
    padding: 10px;
    list-style: none;
    background-color: #eee;
}
.box2 li {
    width: 100px;
    height: 100px;
    border: 1px solid #aaa;
    text-align: center;
}
#box4 li:nth-child(3) {
    -webkit-order: -1;
    order: -1;
}
#box4 li:nth-child(1) {
    -webkit-order: 6;
    order: 6;
}

/*实现内部元素的剧中显示*/
.box3 {
    display:-webkit-flex;
    display:flex;
    -webkit-flex-wrap:wrap;
    flex-direction:wrap;
    width:200px;
    height:200px;
    margin:0;
    padding:0;
    border-radius:5px;
    list-style:none;
    background-color:#eee;
}
.box3 li {
    margin:5px;
    padding:10px;
    border-radius:5px;
    background:red;
    text-align:center;
}
#box5 {
    -webkit-align-content:center;
    align-content:center;
}

/*分栏效果的实现*/
/*根据列数及列宽固定
  要实际考虑width和border以及column-width的关系
  width>= (column-width + 2*border) * (width/column-width); 其中/是取整的
  不会随浏览器宽度改变而改变
*/

#column .test1 {
    width: 930px;
    border: 5px solid #f00;
    -moz-column-width: 300px;
    -webkit-column-width: 300px;
    column-width: 300px;
}


/*列宽固定，根据容器宽度液态分布列数:
  根据浏览器宽度、border以及column-width分布多栏
  并且其column-width并不是最小宽度，当只有一列时有可能更小

  column-width的范围<2*column-width
*/

#column .test2 {
    border: 5px solid #0f0;
    -moz-column-width: 300px;
    -webkit-column-width: 300px;
    column-width: 300px;
}


/*列数固定，根据容器宽度液态分布列宽:
  只关系呈现的是4列
*/

#column .test3 {
    border: 10px solid #000;
    -moz-column-count: 4;
    -webkit-column-count: 4;
    column-count: 4;
}
